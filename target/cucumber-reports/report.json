[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2020-12-23T19:04:35.149Z",
        "before": [
          {
            "result": {
              "duration": 12518000000,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.initialize()"
            }
          }
        ],
        "line": 18,
        "name": "Search for items and move to checkout page",
        "description": "",
        "id": "search-page;search-for-items-and-move-to-checkout-page;;2",
        "after": [
          {
            "result": {
              "duration": 57000000,
              "status": "passed"
            },
            "match": {
              "location": "hooks.Hooks.finalize()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 679000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "hooks.Hooks.beforeEachTest()"
                }
              }
            ],
            "line": 11,
            "name": "User is on GreenKart landing page",
            "match": {
              "location": "steps.SearchSteps.userIsOnGreenKartPage()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "hooks.Hooks.afterEachTest()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 172000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "hooks.Hooks.beforeEachTest()"
                }
              }
            ],
            "line": 12,
            "name": "User searches for Brinjal vegetable",
            "match": {
              "arguments": [
                {
                  "val": "Brinjal",
                  "offset": 18
                }
              ],
              "location": "steps.SearchSteps.userSearchesForVegetable(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "hooks.Hooks.afterEachTest()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document\n  (Session info: chrome\u003d87.0.4280.88)\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/stale_element_reference.html\nBuild info: version: \u00273.141.5\u0027, revision: \u0027d54ebd709a\u0027, time: \u00272018-11-06T11:42:16\u0027\nSystem info: host: \u0027MacBook-Pro-de-Andres.local\u0027, ip: \u0027fe80:0:0:0:cb0:327b:b2a:b433%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.16\u0027, java.version: \u00271.8.0_171\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.88, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: /var/folders/x7/pdg9hvkn7qs...}, goog:chromeOptions: {debuggerAddress: localhost:57507}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 9029454bcf16eded4b1e9e123e8a72e3\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\n\tat org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)\n\tat org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)\n\tat com.sun.proxy.$Proxy19.click(Unknown Source)\n\tat steps.SearchSteps.userAddsItemsToCart(SearchSteps.java:45)\n\tat âœ½.User adds 3 items to cart(file:///Users/andresbarros/MavenProject/src/test/java/features/Search.feature:13)\n",
              "duration": 348000000,
              "status": "failed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "hooks.Hooks.beforeEachTest()"
                }
              }
            ],
            "line": 13,
            "name": "User adds 3 items to cart",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 10
                }
              ],
              "location": "steps.SearchSteps.userAddsItemsToCart(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "hooks.Hooks.afterEachTest()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "skipped"
                },
                "match": {
                  "location": "hooks.Hooks.beforeEachTest()"
                }
              }
            ],
            "line": 14,
            "name": "User proceeds to checkout page",
            "match": {
              "location": "steps.SearchSteps.userProceedsToCheckoutPage()"
            },
            "after": [
              {
                "result": {
                  "status": "skipped"
                },
                "match": {
                  "location": "hooks.Hooks.afterEachTest()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "before": [
              {
                "result": {
                  "status": "skipped"
                },
                "match": {
                  "location": "hooks.Hooks.beforeEachTest()"
                }
              }
            ],
            "line": 15,
            "name": "Verify that 3 items of Brinjal items are displayed in checkout page",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 12
                },
                {
                  "val": "Brinjal",
                  "offset": 23
                }
              ],
              "location": "steps.SearchSteps.verifyThatQtyAndNameAreDisplayedInCheckoutPage(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "skipped"
                },
                "match": {
                  "location": "hooks.Hooks.afterEachTest()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "start_timestamp": "2020-12-23T19:04:49.038Z",
        "before": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d87.0.4280.88)\nBuild info: version: \u00273.141.5\u0027, revision: \u0027d54ebd709a\u0027, time: \u00272018-11-06T11:42:16\u0027\nSystem info: host: \u0027MacBook-Pro-de-Andres.local\u0027, ip: \u0027fe80:0:0:0:cb0:327b:b2a:b433%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.16\u0027, java.version: \u00271.8.0_171\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.88, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: /var/folders/x7/pdg9hvkn7qs...}, goog:chromeOptions: {debuggerAddress: localhost:57593}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 259bf345a18c69b140d8aabc831549be\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:837)\n\tat base.Base.getDriver(Base.java:26)\n\tat hooks.Hooks.initialize(Hooks.java:17)\n",
              "duration": 3624000000,
              "status": "failed"
            },
            "match": {
              "location": "hooks.Hooks.initialize()"
            }
          }
        ],
        "line": 19,
        "name": "Search for items and move to checkout page",
        "description": "",
        "id": "search-page;search-for-items-and-move-to-checkout-page;;3",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d87.0.4280.88)\nBuild info: version: \u00273.141.5\u0027, revision: \u0027d54ebd709a\u0027, time: \u00272018-11-06T11:42:16\u0027\nSystem info: host: \u0027MacBook-Pro-de-Andres.local\u0027, ip: \u0027fe80:0:0:0:cb0:327b:b2a:b433%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.16\u0027, java.version: \u00271.8.0_171\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.88, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: /var/folders/x7/pdg9hvkn7qs...}, goog:chromeOptions: {debuggerAddress: localhost:57593}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 259bf345a18c69b140d8aabc831549be\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)\n\tat org.openqa.selenium.remote.RemoteWebDriver.close(RemoteWebDriver.java:442)\n\tat hooks.Hooks.finalize(Hooks.java:37)\n",
              "duration": 8000000,
              "status": "failed"
            },
            "match": {
              "location": "hooks.Hooks.finalize()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "skipped"
            },
            "before": [
              {
                "result": {
                  "status": "skipped"
                },
                "match": {
                  "location": "hooks.Hooks.beforeEachTest()"
                }
              }
            ],
            "line": 11,
            "name": "User is on GreenKart landing page",
            "match": {
              "location": "steps.SearchSteps.userIsOnGreenKartPage()"
            },
            "after": [
              {
                "result": {
                  "status": "skipped"
                },
                "match": {
                  "location": "hooks.Hooks.afterEachTest()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "before": [
              {
                "result": {
                  "status": "skipped"
                },
                "match": {
                  "location": "hooks.Hooks.beforeEachTest()"
                }
              }
            ],
            "line": 12,
            "name": "User searches for Brocolli vegetable",
            "match": {
              "arguments": [
                {
                  "val": "Brocolli",
                  "offset": 18
                }
              ],
              "location": "steps.SearchSteps.userSearchesForVegetable(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "skipped"
                },
                "match": {
                  "location": "hooks.Hooks.afterEachTest()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "before": [
              {
                "result": {
                  "status": "skipped"
                },
                "match": {
                  "location": "hooks.Hooks.beforeEachTest()"
                }
              }
            ],
            "line": 13,
            "name": "User adds 1 items to cart",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 10
                }
              ],
              "location": "steps.SearchSteps.userAddsItemsToCart(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "skipped"
                },
                "match": {
                  "location": "hooks.Hooks.afterEachTest()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "skipped"
            },
            "before": [
              {
                "result": {
                  "status": "skipped"
                },
                "match": {
                  "location": "hooks.Hooks.beforeEachTest()"
                }
              }
            ],
            "line": 14,
            "name": "User proceeds to checkout page",
            "match": {
              "location": "steps.SearchSteps.userProceedsToCheckoutPage()"
            },
            "after": [
              {
                "result": {
                  "status": "skipped"
                },
                "match": {
                  "location": "hooks.Hooks.afterEachTest()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "skipped"
                },
                "match": {
                  "location": "hooks.Hooks.beforeEachTest()"
                }
              }
            ],
            "line": 15,
            "name": "Verify that 1 items of Brocolli items are displayed in checkout page",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 12
                },
                {
                  "val": "Brocolli",
                  "offset": 23
                }
              ],
              "location": "steps.SearchSteps.verifyThatQtyAndNameAreDisplayedInCheckoutPage(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "skipped"
                },
                "match": {
                  "location": "hooks.Hooks.afterEachTest()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          }
        ]
      }
    ],
    "name": "Search Page",
    "description": "",
    "id": "search-page",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/Search.feature",
    "tags": []
  }
]